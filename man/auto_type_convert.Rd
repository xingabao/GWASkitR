% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auto_type_convert.R
\name{auto_type_convert}
\alias{auto_type_convert}
\title{Automatically Convert Data Frame Column Types}
\usage{
auto_type_convert(df, exclusion = c(), n_check = 1000, verbose = TRUE)
}
\arguments{
\item{df}{A data frame whose columns require type conversion.}

\item{exclusion}{Character vector. Names of columns to exclude from type conversion.
Default is an empty vector \code{c()}, meaning no columns are excluded.}

\item{n_check}{Integer. The number of initial rows to use for type inference.
Default is 1000. If the data frame has fewer rows, all rows are used.}

\item{verbose}{Logical. If \code{TRUE}, prints progress and debugging messages
using the \code{logger} package. Default is \code{FALSE}.}
}
\value{
A data frame with columns converted to their inferred data types.
}
\description{
This function inspects the first \code{n_check} rows of each column in a data frame
to infer the most appropriate data type (e.g., numeric, integer, logical) and converts
the columns accordingly. It is particularly useful for datasets where columns are
initially read as character but should be of a different type.
}
\details{
The function uses the \code{type.convert} utility from base R to infer column types
based on the content of the first \code{n_check} rows. It then applies the inferred
types to the entire column, handling potential warnings or errors during conversion.
Supported types include numeric, integer, and logical. Columns already matching the
inferred type are left unchanged.
}
\examples{
\dontrun{
library(GWASkitR)

# Example using a sample dataset

# Check the structure of sumstats
sumstats <- GWASkitR::sumstats
sumstats$se <- as.character(sumstats$se)
sumstats$eaf <- as.character(sumstats$eaf)
str(sumstats)

df <- GWASkitR:::auto_type_convert(df = sumstats, exclusion = c("se"), verbose = TRUE)

# Check the structure of the converted data frame
str(df)
}

}
